// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package actv1beta1

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	ast "github.com/warden-protocol/wardenprotocol/api/shield/ast"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_Action_9_list)(nil)

type _Action_9_list struct {
	list *[]string
}

func (x *_Action_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Action_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_Action_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Action_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Action_9_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Action at list field Mentions as it is not of Message kind"))
}

func (x *_Action_9_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Action_9_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_Action_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Action_12_list)(nil)

type _Action_12_list struct {
	list *[]*ActionVote
}

func (x *_Action_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Action_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Action_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionVote)
	(*x.list)[i] = concreteValue
}

func (x *_Action_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ActionVote)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Action_12_list) AppendMutable() protoreflect.Value {
	v := new(ActionVote)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Action_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Action_12_list) NewElement() protoreflect.Value {
	v := new(ActionVote)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Action_12_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Action                    protoreflect.MessageDescriptor
	fd_Action_id                 protoreflect.FieldDescriptor
	fd_Action_status             protoreflect.FieldDescriptor
	fd_Action_msg                protoreflect.FieldDescriptor
	fd_Action_result             protoreflect.FieldDescriptor
	fd_Action_creator            protoreflect.FieldDescriptor
	fd_Action_timeout_height     protoreflect.FieldDescriptor
	fd_Action_created_at         protoreflect.FieldDescriptor
	fd_Action_updated_at         protoreflect.FieldDescriptor
	fd_Action_mentions           protoreflect.FieldDescriptor
	fd_Action_approve_expression protoreflect.FieldDescriptor
	fd_Action_reject_expression  protoreflect.FieldDescriptor
	fd_Action_votes              protoreflect.FieldDescriptor
)

func init() {
	file_warden_act_v1beta1_action_proto_init()
	md_Action = File_warden_act_v1beta1_action_proto.Messages().ByName("Action")
	fd_Action_id = md_Action.Fields().ByName("id")
	fd_Action_status = md_Action.Fields().ByName("status")
	fd_Action_msg = md_Action.Fields().ByName("msg")
	fd_Action_result = md_Action.Fields().ByName("result")
	fd_Action_creator = md_Action.Fields().ByName("creator")
	fd_Action_timeout_height = md_Action.Fields().ByName("timeout_height")
	fd_Action_created_at = md_Action.Fields().ByName("created_at")
	fd_Action_updated_at = md_Action.Fields().ByName("updated_at")
	fd_Action_mentions = md_Action.Fields().ByName("mentions")
	fd_Action_approve_expression = md_Action.Fields().ByName("approve_expression")
	fd_Action_reject_expression = md_Action.Fields().ByName("reject_expression")
	fd_Action_votes = md_Action.Fields().ByName("votes")
}

var _ protoreflect.Message = (*fastReflection_Action)(nil)

type fastReflection_Action Action

func (x *Action) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Action)(x)
}

func (x *Action) slowProtoReflect() protoreflect.Message {
	mi := &file_warden_act_v1beta1_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Action_messageType fastReflection_Action_messageType
var _ protoreflect.MessageType = fastReflection_Action_messageType{}

type fastReflection_Action_messageType struct{}

func (x fastReflection_Action_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Action)(nil)
}
func (x fastReflection_Action_messageType) New() protoreflect.Message {
	return new(fastReflection_Action)
}
func (x fastReflection_Action_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Action
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Action) Descriptor() protoreflect.MessageDescriptor {
	return md_Action
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Action) Type() protoreflect.MessageType {
	return _fastReflection_Action_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Action) New() protoreflect.Message {
	return new(fastReflection_Action)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Action) Interface() protoreflect.ProtoMessage {
	return (*Action)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Action) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_Action_id, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_Action_status, value) {
			return
		}
	}
	if x.Msg != nil {
		value := protoreflect.ValueOfMessage(x.Msg.ProtoReflect())
		if !f(fd_Action_msg, value) {
			return
		}
	}
	if x.Result != nil {
		value := protoreflect.ValueOfMessage(x.Result.ProtoReflect())
		if !f(fd_Action_result, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_Action_creator, value) {
			return
		}
	}
	if x.TimeoutHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TimeoutHeight)
		if !f(fd_Action_timeout_height, value) {
			return
		}
	}
	if x.CreatedAt != nil {
		value := protoreflect.ValueOfMessage(x.CreatedAt.ProtoReflect())
		if !f(fd_Action_created_at, value) {
			return
		}
	}
	if x.UpdatedAt != nil {
		value := protoreflect.ValueOfMessage(x.UpdatedAt.ProtoReflect())
		if !f(fd_Action_updated_at, value) {
			return
		}
	}
	if len(x.Mentions) != 0 {
		value := protoreflect.ValueOfList(&_Action_9_list{list: &x.Mentions})
		if !f(fd_Action_mentions, value) {
			return
		}
	}
	if x.ApproveExpression != nil {
		value := protoreflect.ValueOfMessage(x.ApproveExpression.ProtoReflect())
		if !f(fd_Action_approve_expression, value) {
			return
		}
	}
	if x.RejectExpression != nil {
		value := protoreflect.ValueOfMessage(x.RejectExpression.ProtoReflect())
		if !f(fd_Action_reject_expression, value) {
			return
		}
	}
	if len(x.Votes) != 0 {
		value := protoreflect.ValueOfList(&_Action_12_list{list: &x.Votes})
		if !f(fd_Action_votes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Action) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "warden.act.v1beta1.Action.id":
		return x.Id != uint64(0)
	case "warden.act.v1beta1.Action.status":
		return x.Status != 0
	case "warden.act.v1beta1.Action.msg":
		return x.Msg != nil
	case "warden.act.v1beta1.Action.result":
		return x.Result != nil
	case "warden.act.v1beta1.Action.creator":
		return x.Creator != ""
	case "warden.act.v1beta1.Action.timeout_height":
		return x.TimeoutHeight != uint64(0)
	case "warden.act.v1beta1.Action.created_at":
		return x.CreatedAt != nil
	case "warden.act.v1beta1.Action.updated_at":
		return x.UpdatedAt != nil
	case "warden.act.v1beta1.Action.mentions":
		return len(x.Mentions) != 0
	case "warden.act.v1beta1.Action.approve_expression":
		return x.ApproveExpression != nil
	case "warden.act.v1beta1.Action.reject_expression":
		return x.RejectExpression != nil
	case "warden.act.v1beta1.Action.votes":
		return len(x.Votes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.act.v1beta1.Action"))
		}
		panic(fmt.Errorf("message warden.act.v1beta1.Action does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "warden.act.v1beta1.Action.id":
		x.Id = uint64(0)
	case "warden.act.v1beta1.Action.status":
		x.Status = 0
	case "warden.act.v1beta1.Action.msg":
		x.Msg = nil
	case "warden.act.v1beta1.Action.result":
		x.Result = nil
	case "warden.act.v1beta1.Action.creator":
		x.Creator = ""
	case "warden.act.v1beta1.Action.timeout_height":
		x.TimeoutHeight = uint64(0)
	case "warden.act.v1beta1.Action.created_at":
		x.CreatedAt = nil
	case "warden.act.v1beta1.Action.updated_at":
		x.UpdatedAt = nil
	case "warden.act.v1beta1.Action.mentions":
		x.Mentions = nil
	case "warden.act.v1beta1.Action.approve_expression":
		x.ApproveExpression = nil
	case "warden.act.v1beta1.Action.reject_expression":
		x.RejectExpression = nil
	case "warden.act.v1beta1.Action.votes":
		x.Votes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.act.v1beta1.Action"))
		}
		panic(fmt.Errorf("message warden.act.v1beta1.Action does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Action) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "warden.act.v1beta1.Action.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "warden.act.v1beta1.Action.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "warden.act.v1beta1.Action.msg":
		value := x.Msg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "warden.act.v1beta1.Action.result":
		value := x.Result
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "warden.act.v1beta1.Action.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "warden.act.v1beta1.Action.timeout_height":
		value := x.TimeoutHeight
		return protoreflect.ValueOfUint64(value)
	case "warden.act.v1beta1.Action.created_at":
		value := x.CreatedAt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "warden.act.v1beta1.Action.updated_at":
		value := x.UpdatedAt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "warden.act.v1beta1.Action.mentions":
		if len(x.Mentions) == 0 {
			return protoreflect.ValueOfList(&_Action_9_list{})
		}
		listValue := &_Action_9_list{list: &x.Mentions}
		return protoreflect.ValueOfList(listValue)
	case "warden.act.v1beta1.Action.approve_expression":
		value := x.ApproveExpression
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "warden.act.v1beta1.Action.reject_expression":
		value := x.RejectExpression
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "warden.act.v1beta1.Action.votes":
		if len(x.Votes) == 0 {
			return protoreflect.ValueOfList(&_Action_12_list{})
		}
		listValue := &_Action_12_list{list: &x.Votes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.act.v1beta1.Action"))
		}
		panic(fmt.Errorf("message warden.act.v1beta1.Action does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "warden.act.v1beta1.Action.id":
		x.Id = value.Uint()
	case "warden.act.v1beta1.Action.status":
		x.Status = (ActionStatus)(value.Enum())
	case "warden.act.v1beta1.Action.msg":
		x.Msg = value.Message().Interface().(*anypb.Any)
	case "warden.act.v1beta1.Action.result":
		x.Result = value.Message().Interface().(*anypb.Any)
	case "warden.act.v1beta1.Action.creator":
		x.Creator = value.Interface().(string)
	case "warden.act.v1beta1.Action.timeout_height":
		x.TimeoutHeight = value.Uint()
	case "warden.act.v1beta1.Action.created_at":
		x.CreatedAt = value.Message().Interface().(*timestamppb.Timestamp)
	case "warden.act.v1beta1.Action.updated_at":
		x.UpdatedAt = value.Message().Interface().(*timestamppb.Timestamp)
	case "warden.act.v1beta1.Action.mentions":
		lv := value.List()
		clv := lv.(*_Action_9_list)
		x.Mentions = *clv.list
	case "warden.act.v1beta1.Action.approve_expression":
		x.ApproveExpression = value.Message().Interface().(*ast.Expression)
	case "warden.act.v1beta1.Action.reject_expression":
		x.RejectExpression = value.Message().Interface().(*ast.Expression)
	case "warden.act.v1beta1.Action.votes":
		lv := value.List()
		clv := lv.(*_Action_12_list)
		x.Votes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.act.v1beta1.Action"))
		}
		panic(fmt.Errorf("message warden.act.v1beta1.Action does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.act.v1beta1.Action.msg":
		if x.Msg == nil {
			x.Msg = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Msg.ProtoReflect())
	case "warden.act.v1beta1.Action.result":
		if x.Result == nil {
			x.Result = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Result.ProtoReflect())
	case "warden.act.v1beta1.Action.created_at":
		if x.CreatedAt == nil {
			x.CreatedAt = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.CreatedAt.ProtoReflect())
	case "warden.act.v1beta1.Action.updated_at":
		if x.UpdatedAt == nil {
			x.UpdatedAt = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.UpdatedAt.ProtoReflect())
	case "warden.act.v1beta1.Action.mentions":
		if x.Mentions == nil {
			x.Mentions = []string{}
		}
		value := &_Action_9_list{list: &x.Mentions}
		return protoreflect.ValueOfList(value)
	case "warden.act.v1beta1.Action.approve_expression":
		if x.ApproveExpression == nil {
			x.ApproveExpression = new(ast.Expression)
		}
		return protoreflect.ValueOfMessage(x.ApproveExpression.ProtoReflect())
	case "warden.act.v1beta1.Action.reject_expression":
		if x.RejectExpression == nil {
			x.RejectExpression = new(ast.Expression)
		}
		return protoreflect.ValueOfMessage(x.RejectExpression.ProtoReflect())
	case "warden.act.v1beta1.Action.votes":
		if x.Votes == nil {
			x.Votes = []*ActionVote{}
		}
		value := &_Action_12_list{list: &x.Votes}
		return protoreflect.ValueOfList(value)
	case "warden.act.v1beta1.Action.id":
		panic(fmt.Errorf("field id of message warden.act.v1beta1.Action is not mutable"))
	case "warden.act.v1beta1.Action.status":
		panic(fmt.Errorf("field status of message warden.act.v1beta1.Action is not mutable"))
	case "warden.act.v1beta1.Action.creator":
		panic(fmt.Errorf("field creator of message warden.act.v1beta1.Action is not mutable"))
	case "warden.act.v1beta1.Action.timeout_height":
		panic(fmt.Errorf("field timeout_height of message warden.act.v1beta1.Action is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.act.v1beta1.Action"))
		}
		panic(fmt.Errorf("message warden.act.v1beta1.Action does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Action) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "warden.act.v1beta1.Action.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.act.v1beta1.Action.status":
		return protoreflect.ValueOfEnum(0)
	case "warden.act.v1beta1.Action.msg":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "warden.act.v1beta1.Action.result":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "warden.act.v1beta1.Action.creator":
		return protoreflect.ValueOfString("")
	case "warden.act.v1beta1.Action.timeout_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "warden.act.v1beta1.Action.created_at":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "warden.act.v1beta1.Action.updated_at":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "warden.act.v1beta1.Action.mentions":
		list := []string{}
		return protoreflect.ValueOfList(&_Action_9_list{list: &list})
	case "warden.act.v1beta1.Action.approve_expression":
		m := new(ast.Expression)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "warden.act.v1beta1.Action.reject_expression":
		m := new(ast.Expression)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "warden.act.v1beta1.Action.votes":
		list := []*ActionVote{}
		return protoreflect.ValueOfList(&_Action_12_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: warden.act.v1beta1.Action"))
		}
		panic(fmt.Errorf("message warden.act.v1beta1.Action does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Action) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in warden.act.v1beta1.Action", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Action) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Action) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Action) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Action)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.Msg != nil {
			l = options.Size(x.Msg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Result != nil {
			l = options.Size(x.Result)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TimeoutHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.TimeoutHeight))
		}
		if x.CreatedAt != nil {
			l = options.Size(x.CreatedAt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdatedAt != nil {
			l = options.Size(x.UpdatedAt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Mentions) > 0 {
			for _, s := range x.Mentions {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.ApproveExpression != nil {
			l = options.Size(x.ApproveExpression)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RejectExpression != nil {
			l = options.Size(x.RejectExpression)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Votes) > 0 {
			for _, e := range x.Votes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Action)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Votes) > 0 {
			for iNdEx := len(x.Votes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Votes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if x.RejectExpression != nil {
			encoded, err := options.Marshal(x.RejectExpression)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x5a
		}
		if x.ApproveExpression != nil {
			encoded, err := options.Marshal(x.ApproveExpression)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Mentions) > 0 {
			for iNdEx := len(x.Mentions) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Mentions[iNdEx])
				copy(dAtA[i:], x.Mentions[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Mentions[iNdEx])))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.UpdatedAt != nil {
			encoded, err := options.Marshal(x.UpdatedAt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.CreatedAt != nil {
			encoded, err := options.Marshal(x.CreatedAt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.TimeoutHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TimeoutHeight))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Result != nil {
			encoded, err := options.Marshal(x.Result)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.Msg != nil {
			encoded, err := options.Marshal(x.Msg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Action)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Action: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Action: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= ActionStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Msg == nil {
					x.Msg = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Msg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Result == nil {
					x.Result = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Result); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimeoutHeight", wireType)
				}
				x.TimeoutHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TimeoutHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreatedAt == nil {
					x.CreatedAt = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreatedAt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.UpdatedAt == nil {
					x.UpdatedAt = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UpdatedAt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Mentions", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Mentions = append(x.Mentions, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ApproveExpression", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ApproveExpression == nil {
					x.ApproveExpression = &ast.Expression{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ApproveExpression); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RejectExpression", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RejectExpression == nil {
					x.RejectExpression = &ast.Expression{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RejectExpression); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Votes = append(x.Votes, &ActionVote{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Votes[len(x.Votes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: warden/act/v1beta1/action.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Current status of an action.
type ActionStatus int32

const (
	// Unspecified status.
	ActionStatus_ACTION_STATUS_UNSPECIFIED ActionStatus = 0
	// Action is pending approval. This is the initial status.
	ActionStatus_ACTION_STATUS_PENDING ActionStatus = 1
	// Template has been satified, action has been executed.
	ActionStatus_ACTION_STATUS_COMPLETED ActionStatus = 2
	// Action has been revoked by its creator.
	ActionStatus_ACTION_STATUS_REVOKED ActionStatus = 3
	// Action has been rejected since TimeoutHeight has been reached.
	ActionStatus_ACTION_STATUS_TIMEOUT ActionStatus = 4
)

// Enum value maps for ActionStatus.
var (
	ActionStatus_name = map[int32]string{
		0: "ACTION_STATUS_UNSPECIFIED",
		1: "ACTION_STATUS_PENDING",
		2: "ACTION_STATUS_COMPLETED",
		3: "ACTION_STATUS_REVOKED",
		4: "ACTION_STATUS_TIMEOUT",
	}
	ActionStatus_value = map[string]int32{
		"ACTION_STATUS_UNSPECIFIED": 0,
		"ACTION_STATUS_PENDING":     1,
		"ACTION_STATUS_COMPLETED":   2,
		"ACTION_STATUS_REVOKED":     3,
		"ACTION_STATUS_TIMEOUT":     4,
	}
)

func (x ActionStatus) Enum() *ActionStatus {
	p := new(ActionStatus)
	*p = x
	return p
}

func (x ActionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_warden_act_v1beta1_action_proto_enumTypes[0].Descriptor()
}

func (ActionStatus) Type() protoreflect.EnumType {
	return &file_warden_act_v1beta1_action_proto_enumTypes[0]
}

func (x ActionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionStatus.Descriptor instead.
func (ActionStatus) EnumDescriptor() ([]byte, []int) {
	return file_warden_act_v1beta1_action_proto_rawDescGZIP(), []int{0}
}

// Action wraps a message that will be executed when its associated template is
// satisfied.
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status ActionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=warden.act.v1beta1.ActionStatus" json:"status,omitempty"`
	// Original message that started the action, it will be executed when the
	// template is satisfied.
	Msg *anypb.Any `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	// Result of the action, it will be set when the action is completed.
	Result  *anypb.Any `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	Creator string     `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	// TimeoutHeight is the block height up until this action can be executed.
	TimeoutHeight uint64 `protobuf:"varint,6,opt,name=timeout_height,json=timeoutHeight,proto3" json:"timeout_height,omitempty"`
	// created_at is a timestamp specifying when the action was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// updated_at is a timestamp specifying when the action's status was updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// mentions is a list of addresses that are mentioned in the template.
	Mentions []string `protobuf:"bytes,9,rep,name=mentions,proto3" json:"mentions,omitempty"`
	// The expression to be evaluated for approval.
	ApproveExpression *ast.Expression `protobuf:"bytes,10,opt,name=approve_expression,json=approveExpression,proto3" json:"approve_expression,omitempty"`
	// The expression to be evaluated for rejection.
	RejectExpression *ast.Expression `protobuf:"bytes,11,opt,name=reject_expression,json=rejectExpression,proto3" json:"reject_expression,omitempty"`
	// The votes accepted from the voting participants.
	Votes []*ActionVote `protobuf:"bytes,12,rep,name=votes,proto3" json:"votes,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warden_act_v1beta1_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_warden_act_v1beta1_action_proto_rawDescGZIP(), []int{0}
}

func (x *Action) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Action) GetStatus() ActionStatus {
	if x != nil {
		return x.Status
	}
	return ActionStatus_ACTION_STATUS_UNSPECIFIED
}

func (x *Action) GetMsg() *anypb.Any {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Action) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Action) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Action) GetTimeoutHeight() uint64 {
	if x != nil {
		return x.TimeoutHeight
	}
	return 0
}

func (x *Action) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Action) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Action) GetMentions() []string {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *Action) GetApproveExpression() *ast.Expression {
	if x != nil {
		return x.ApproveExpression
	}
	return nil
}

func (x *Action) GetRejectExpression() *ast.Expression {
	if x != nil {
		return x.RejectExpression
	}
	return nil
}

func (x *Action) GetVotes() []*ActionVote {
	if x != nil {
		return x.Votes
	}
	return nil
}

var File_warden_act_v1beta1_action_proto protoreflect.FileDescriptor

var file_warden_act_v1beta1_action_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69,
	0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x68, 0x69, 0x65,
	0x6c, 0x64, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2f, 0x61,
	0x63, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x04, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0d, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0xa8,
	0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x48, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x0d, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x11, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x10, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x76, 0x6f,
	0x74, 0x65, 0x73, 0x2a, 0x9b, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b,
	0x0a, 0x17, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x56,
	0x4f, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10,
	0x04, 0x42, 0xdc, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e,
	0x2e, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0b, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x2f, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x61, 0x63,
	0x74, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x57, 0x41, 0x58, 0xaa, 0x02,
	0x12, 0x57, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x2e, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0xca, 0x02, 0x12, 0x57, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x5c, 0x41, 0x63, 0x74,
	0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x1e, 0x57, 0x61, 0x72, 0x64, 0x65,
	0x6e, 0x5c, 0x41, 0x63, 0x74, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x57, 0x61, 0x72, 0x64,
	0x65, 0x6e, 0x3a, 0x3a, 0x41, 0x63, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warden_act_v1beta1_action_proto_rawDescOnce sync.Once
	file_warden_act_v1beta1_action_proto_rawDescData = file_warden_act_v1beta1_action_proto_rawDesc
)

func file_warden_act_v1beta1_action_proto_rawDescGZIP() []byte {
	file_warden_act_v1beta1_action_proto_rawDescOnce.Do(func() {
		file_warden_act_v1beta1_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_warden_act_v1beta1_action_proto_rawDescData)
	})
	return file_warden_act_v1beta1_action_proto_rawDescData
}

var file_warden_act_v1beta1_action_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_warden_act_v1beta1_action_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_warden_act_v1beta1_action_proto_goTypes = []interface{}{
	(ActionStatus)(0),             // 0: warden.act.v1beta1.ActionStatus
	(*Action)(nil),                // 1: warden.act.v1beta1.Action
	(*anypb.Any)(nil),             // 2: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*ast.Expression)(nil),        // 4: shield.ast.Expression
	(*ActionVote)(nil),            // 5: warden.act.v1beta1.ActionVote
}
var file_warden_act_v1beta1_action_proto_depIdxs = []int32{
	0, // 0: warden.act.v1beta1.Action.status:type_name -> warden.act.v1beta1.ActionStatus
	2, // 1: warden.act.v1beta1.Action.msg:type_name -> google.protobuf.Any
	2, // 2: warden.act.v1beta1.Action.result:type_name -> google.protobuf.Any
	3, // 3: warden.act.v1beta1.Action.created_at:type_name -> google.protobuf.Timestamp
	3, // 4: warden.act.v1beta1.Action.updated_at:type_name -> google.protobuf.Timestamp
	4, // 5: warden.act.v1beta1.Action.approve_expression:type_name -> shield.ast.Expression
	4, // 6: warden.act.v1beta1.Action.reject_expression:type_name -> shield.ast.Expression
	5, // 7: warden.act.v1beta1.Action.votes:type_name -> warden.act.v1beta1.ActionVote
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_warden_act_v1beta1_action_proto_init() }
func file_warden_act_v1beta1_action_proto_init() {
	if File_warden_act_v1beta1_action_proto != nil {
		return
	}
	file_warden_act_v1beta1_action_vote_proto_init()
	file_warden_act_v1beta1_template_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_warden_act_v1beta1_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warden_act_v1beta1_action_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warden_act_v1beta1_action_proto_goTypes,
		DependencyIndexes: file_warden_act_v1beta1_action_proto_depIdxs,
		EnumInfos:         file_warden_act_v1beta1_action_proto_enumTypes,
		MessageInfos:      file_warden_act_v1beta1_action_proto_msgTypes,
	}.Build()
	File_warden_act_v1beta1_action_proto = out.File
	file_warden_act_v1beta1_action_proto_rawDesc = nil
	file_warden_act_v1beta1_action_proto_goTypes = nil
	file_warden_act_v1beta1_action_proto_depIdxs = nil
}
