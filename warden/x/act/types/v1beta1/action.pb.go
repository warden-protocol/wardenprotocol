// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: warden/act/v1beta1/action.proto

package v1beta1

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	ast "github.com/warden-protocol/wardenprotocol/shield/ast"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Current status of an action.
type ActionStatus int32

const (
	// Unspecified status.
	ActionStatus_ACTION_STATUS_UNSPECIFIED ActionStatus = 0
	// Action is pending approval. This is the initial status.
	ActionStatus_ACTION_STATUS_PENDING ActionStatus = 1
	// Template has been satified, action has been executed.
	ActionStatus_ACTION_STATUS_COMPLETED ActionStatus = 2
	// Action has been revoked by its creator.
	ActionStatus_ACTION_STATUS_REVOKED ActionStatus = 3
	// Action has been rejected since TimeoutHeight has been reached.
	ActionStatus_ACTION_STATUS_TIMEOUT ActionStatus = 4
)

var ActionStatus_name = map[int32]string{
	0: "ACTION_STATUS_UNSPECIFIED",
	1: "ACTION_STATUS_PENDING",
	2: "ACTION_STATUS_COMPLETED",
	3: "ACTION_STATUS_REVOKED",
	4: "ACTION_STATUS_TIMEOUT",
}

var ActionStatus_value = map[string]int32{
	"ACTION_STATUS_UNSPECIFIED": 0,
	"ACTION_STATUS_PENDING":     1,
	"ACTION_STATUS_COMPLETED":   2,
	"ACTION_STATUS_REVOKED":     3,
	"ACTION_STATUS_TIMEOUT":     4,
}

func (x ActionStatus) String() string {
	return proto.EnumName(ActionStatus_name, int32(x))
}

func (ActionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed852fba5dd71480, []int{0}
}

// Action wraps a message that will be executed when its associated template is
// satisfied.
type Action struct {
	Id     uint64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status ActionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=warden.act.v1beta1.ActionStatus" json:"status,omitempty"`
	// Original message that started the action, it will be executed when the
	// template is satisfied.
	Msg *types.Any `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	// Result of the action, it will be set when the action is completed.
	Result  *types.Any `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	Creator string     `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	// TimeoutHeight is the block height up until this action can be executed.
	TimeoutHeight uint64 `protobuf:"varint,6,opt,name=timeout_height,json=timeoutHeight,proto3" json:"timeout_height,omitempty"`
	// created_at is a timestamp specifying when the action was created
	CreatedAt time.Time `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	// updated_at is a timestamp specifying when the action's status was updated
	UpdatedAt time.Time `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at"`
	// mentions is a list of addresses that are mentioned in the template.
	Mentions []string `protobuf:"bytes,9,rep,name=mentions,proto3" json:"mentions,omitempty"`
	// The expression to be evaluated for approval.
	ApproveExpression ast.Expression `protobuf:"bytes,10,opt,name=approve_expression,json=approveExpression,proto3" json:"approve_expression"`
	// The expression to be evaluated for rejection.
	RejectExpression ast.Expression `protobuf:"bytes,11,opt,name=reject_expression,json=rejectExpression,proto3" json:"reject_expression"`
	// The votes accepted from the voting participants.
	Votes []*ActionVote `protobuf:"bytes,12,rep,name=votes,proto3" json:"votes,omitempty"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed852fba5dd71480, []int{0}
}
func (m *Action) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Action.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return m.Size()
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Action) GetStatus() ActionStatus {
	if m != nil {
		return m.Status
	}
	return ActionStatus_ACTION_STATUS_UNSPECIFIED
}

func (m *Action) GetMsg() *types.Any {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Action) GetResult() *types.Any {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Action) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Action) GetTimeoutHeight() uint64 {
	if m != nil {
		return m.TimeoutHeight
	}
	return 0
}

func (m *Action) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *Action) GetUpdatedAt() time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return time.Time{}
}

func (m *Action) GetMentions() []string {
	if m != nil {
		return m.Mentions
	}
	return nil
}

func (m *Action) GetApproveExpression() ast.Expression {
	if m != nil {
		return m.ApproveExpression
	}
	return ast.Expression{}
}

func (m *Action) GetRejectExpression() ast.Expression {
	if m != nil {
		return m.RejectExpression
	}
	return ast.Expression{}
}

func (m *Action) GetVotes() []*ActionVote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func init() {
	proto.RegisterEnum("warden.act.v1beta1.ActionStatus", ActionStatus_name, ActionStatus_value)
	proto.RegisterType((*Action)(nil), "warden.act.v1beta1.Action")
}

func init() { proto.RegisterFile("warden/act/v1beta1/action.proto", fileDescriptor_ed852fba5dd71480) }

var fileDescriptor_ed852fba5dd71480 = []byte{
	// 603 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4f, 0x53, 0xd3, 0x40,
	0x14, 0xef, 0xb6, 0xa5, 0xd0, 0xe5, 0xcf, 0x94, 0x1d, 0xd4, 0x50, 0xc7, 0x34, 0x3a, 0xea, 0x74,
	0x18, 0x4d, 0x06, 0xf4, 0xe0, 0xb5, 0xd0, 0x28, 0x1d, 0xa4, 0x65, 0xd2, 0xc0, 0xc1, 0x83, 0x9d,
	0x6d, 0xb2, 0xa6, 0x71, 0x9a, 0x6c, 0x26, 0xbb, 0x41, 0xf8, 0x16, 0xdc, 0xfd, 0x02, 0x1e, 0xfd,
	0x18, 0x1c, 0x39, 0x7a, 0x52, 0x07, 0x0e, 0x7c, 0x0d, 0x27, 0x9b, 0x0d, 0x16, 0x2a, 0x8e, 0x1e,
	0xda, 0xd9, 0xf7, 0x7e, 0x7f, 0x5e, 0xde, 0xdb, 0xb7, 0xb0, 0xf1, 0x09, 0xc7, 0x2e, 0x09, 0x0d,
	0xec, 0x70, 0xe3, 0x70, 0x7d, 0x48, 0x38, 0x5e, 0x4f, 0xcf, 0x3e, 0x0d, 0xf5, 0x28, 0xa6, 0x9c,
	0x22, 0x94, 0x11, 0x74, 0xec, 0x70, 0x5d, 0x12, 0xea, 0xcb, 0x38, 0xf0, 0x43, 0x6a, 0x88, 0xff,
	0x8c, 0x56, 0x5f, 0xf1, 0xa8, 0x47, 0xc5, 0xd1, 0x48, 0x4f, 0x32, 0xbb, 0xea, 0x51, 0xea, 0x8d,
	0x89, 0x21, 0xa2, 0x61, 0xf2, 0xc1, 0xc0, 0xe1, 0xb1, 0x84, 0x1a, 0x37, 0x21, 0xee, 0x07, 0x84,
	0x71, 0x1c, 0x44, 0xb9, 0x23, 0x1b, 0xf9, 0x64, 0xec, 0x1a, 0x98, 0xf1, 0xf4, 0x27, 0xb3, 0x8f,
	0x6f, 0xfd, 0xde, 0xc1, 0x21, 0xe5, 0x44, 0xb2, 0x1e, 0xfe, 0x81, 0xc5, 0x49, 0x10, 0x8d, 0x71,
	0x4e, 0x79, 0x74, 0x59, 0x86, 0x95, 0x96, 0x10, 0xa2, 0x25, 0x58, 0xf4, 0x5d, 0x05, 0x68, 0xa0,
	0x59, 0xb6, 0x8a, 0xbe, 0x8b, 0x5e, 0xc1, 0x0a, 0xe3, 0x98, 0x27, 0x4c, 0x29, 0x6a, 0xa0, 0xb9,
	0xb4, 0xa1, 0xe9, 0xd3, 0x33, 0xd0, 0x33, 0x6d, 0x5f, 0xf0, 0x2c, 0xc9, 0x47, 0x4f, 0x61, 0x29,
	0x60, 0x9e, 0x52, 0xd2, 0x40, 0x73, 0x7e, 0x63, 0x45, 0xcf, 0x5a, 0xd4, 0xf3, 0x16, 0xf5, 0x56,
	0x78, 0x6c, 0xa5, 0x04, 0xf4, 0x0c, 0x56, 0x62, 0xc2, 0x92, 0x31, 0x57, 0xca, 0x7f, 0xa1, 0x4a,
	0x0e, 0x52, 0xe0, 0xac, 0x13, 0x13, 0xcc, 0x69, 0xac, 0xcc, 0x68, 0xa0, 0x59, 0xb5, 0xf2, 0x10,
	0x3d, 0x81, 0x4b, 0xe9, 0xd8, 0x68, 0xc2, 0x07, 0x23, 0xe2, 0x7b, 0x23, 0xae, 0x54, 0x44, 0x17,
	0x8b, 0x32, 0xbb, 0x2d, 0x92, 0x68, 0x1b, 0x42, 0xa1, 0x20, 0xee, 0x00, 0x73, 0x65, 0x56, 0x94,
	0xac, 0x4f, 0x95, 0xb4, 0xf3, 0x0b, 0xd8, 0x5c, 0x3c, 0xfd, 0xde, 0x28, 0x9c, 0xfc, 0x68, 0x80,
	0x2f, 0x97, 0x5f, 0xd7, 0x80, 0x55, 0x95, 0xe2, 0x96, 0x70, 0x4a, 0x22, 0x37, 0x77, 0x9a, 0xfb,
	0x6f, 0x27, 0x29, 0x6e, 0x71, 0x54, 0x87, 0x73, 0x01, 0x09, 0xd3, 0x19, 0x32, 0xa5, 0xaa, 0x95,
	0x9a, 0x55, 0xeb, 0x2a, 0x46, 0x3b, 0x10, 0xe1, 0x28, 0x8a, 0xe9, 0x21, 0x19, 0x90, 0xa3, 0x28,
	0x26, 0x8c, 0xf9, 0x34, 0x54, 0xa0, 0xa8, 0x76, 0x57, 0xcf, 0xf6, 0x42, 0x4f, 0x77, 0xc2, 0xbc,
	0x42, 0x37, 0xcb, 0x69, 0x25, 0x6b, 0x59, 0xea, 0x7e, 0x03, 0xa8, 0x03, 0x97, 0x63, 0xf2, 0x91,
	0x38, 0x7c, 0xd2, 0x6b, 0xfe, 0x1f, 0xbc, 0x6a, 0x99, 0x6c, 0xc2, 0xea, 0x25, 0x9c, 0x49, 0x97,
	0x8c, 0x29, 0x0b, 0x5a, 0xa9, 0x39, 0xbf, 0xa1, 0xde, 0xbe, 0x17, 0x07, 0x94, 0x13, 0x2b, 0x23,
	0xaf, 0x7d, 0x06, 0x70, 0x61, 0x72, 0x5b, 0xd0, 0x03, 0xb8, 0xda, 0xda, 0xb2, 0x3b, 0xbd, 0xee,
	0xa0, 0x6f, 0xb7, 0xec, 0xfd, 0xfe, 0x60, 0xbf, 0xdb, 0xdf, 0x33, 0xb7, 0x3a, 0xaf, 0x3b, 0x66,
	0xbb, 0x56, 0x40, 0xab, 0xf0, 0xce, 0x75, 0x78, 0xcf, 0xec, 0xb6, 0x3b, 0xdd, 0x37, 0x35, 0x80,
	0xee, 0xc3, 0x7b, 0xd7, 0xa1, 0xad, 0xde, 0xee, 0xde, 0x5b, 0xd3, 0x36, 0xdb, 0xb5, 0xe2, 0xb4,
	0xce, 0x32, 0x0f, 0x7a, 0x3b, 0x66, 0xbb, 0x56, 0x9a, 0x86, 0xec, 0xce, 0xae, 0xd9, 0xdb, 0xb7,
	0x6b, 0xe5, 0xcd, 0xf7, 0xa7, 0xe7, 0x2a, 0x38, 0x3b, 0x57, 0xc1, 0xcf, 0x73, 0x15, 0x9c, 0x5c,
	0xa8, 0x85, 0xb3, 0x0b, 0xb5, 0xf0, 0xed, 0x42, 0x2d, 0xbc, 0x6b, 0x7b, 0x3e, 0x1f, 0x25, 0x43,
	0xdd, 0xa1, 0x81, 0x91, 0x35, 0xfa, 0x5c, 0xdc, 0xb0, 0x43, 0xc7, 0x32, 0xbe, 0x11, 0x1a, 0x47,
	0xe2, 0xc1, 0xf1, 0xe3, 0x88, 0xb0, 0xfc, 0xd9, 0x0d, 0x2b, 0x82, 0xf4, 0xe2, 0x57, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd8, 0x39, 0x89, 0xae, 0x69, 0x04, 0x00, 0x00,
}

func (m *Action) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Action) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Action) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Votes) > 0 {
		for iNdEx := len(m.Votes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Votes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAction(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x62
		}
	}
	{
		size, err := m.RejectExpression.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintAction(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x5a
	{
		size, err := m.ApproveExpression.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintAction(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x52
	if len(m.Mentions) > 0 {
		for iNdEx := len(m.Mentions) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Mentions[iNdEx])
			copy(dAtA[i:], m.Mentions[iNdEx])
			i = encodeVarintAction(dAtA, i, uint64(len(m.Mentions[iNdEx])))
			i--
			dAtA[i] = 0x4a
		}
	}
	n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.UpdatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UpdatedAt):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintAction(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x42
	n4, err4 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt):])
	if err4 != nil {
		return 0, err4
	}
	i -= n4
	i = encodeVarintAction(dAtA, i, uint64(n4))
	i--
	dAtA[i] = 0x3a
	if m.TimeoutHeight != 0 {
		i = encodeVarintAction(dAtA, i, uint64(m.TimeoutHeight))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintAction(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Result != nil {
		{
			size, err := m.Result.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAction(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Msg != nil {
		{
			size, err := m.Msg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAction(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Status != 0 {
		i = encodeVarintAction(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintAction(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintAction(dAtA []byte, offset int, v uint64) int {
	offset -= sovAction(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Action) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovAction(uint64(m.Id))
	}
	if m.Status != 0 {
		n += 1 + sovAction(uint64(m.Status))
	}
	if m.Msg != nil {
		l = m.Msg.Size()
		n += 1 + l + sovAction(uint64(l))
	}
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovAction(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovAction(uint64(l))
	}
	if m.TimeoutHeight != 0 {
		n += 1 + sovAction(uint64(m.TimeoutHeight))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovAction(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UpdatedAt)
	n += 1 + l + sovAction(uint64(l))
	if len(m.Mentions) > 0 {
		for _, s := range m.Mentions {
			l = len(s)
			n += 1 + l + sovAction(uint64(l))
		}
	}
	l = m.ApproveExpression.Size()
	n += 1 + l + sovAction(uint64(l))
	l = m.RejectExpression.Size()
	n += 1 + l + sovAction(uint64(l))
	if len(m.Votes) > 0 {
		for _, e := range m.Votes {
			l = e.Size()
			n += 1 + l + sovAction(uint64(l))
		}
	}
	return n
}

func sovAction(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAction(x uint64) (n int) {
	return sovAction(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Action) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAction
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Action: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Action: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= ActionStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Msg == nil {
				m.Msg = &types.Any{}
			}
			if err := m.Msg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &types.Any{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeoutHeight", wireType)
			}
			m.TimeoutHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeoutHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mentions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mentions = append(m.Mentions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApproveExpression", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ApproveExpression.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RejectExpression", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RejectExpression.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAction
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAction
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAction
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Votes = append(m.Votes, &ActionVote{})
			if err := m.Votes[len(m.Votes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAction(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAction
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAction(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAction
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAction
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAction
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAction
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAction
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAction
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAction        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAction          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAction = fmt.Errorf("proto: unexpected end of group")
)
