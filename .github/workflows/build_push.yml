---
name: Build and Push Docker

on:
  workflow_dispatch:
    inputs:
      service_name:
        description: "Service"
        required: true
        type: choice
        options:
          - spaceward
          - wardend
          - faucet
          - wardenkms
          - spaceward-relay
          - automated-orders-scheduler
          - automated-orders-relayer
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string

jobs:
  build-and-push:
    name: Build and Push ${{inputs.service_name }}
    runs-on: ubuntu-latest
    outputs:
      image: ${{ vars.REGISTRY }}/${{ inputs.service_name }}:${{ steps.meta.outputs.version }}
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY }}/${{ inputs.service_name }}
          tags: |
            type=match,pattern=${{ inputs.service_name }}/v(.+),group=1,prefix=v,latest=true
            type=semver,pattern={{raw}},latest=true
            type=sha,format=short,prefix=
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          target: ${{ inputs.service_name }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  scan-image:
    name: Scan Image ${{inputs.service_name }}
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ needs.build-and-push.outputs.image }}
          output: "trivy.txt"
          # exit-code: "1"
          severity: "CRITICAL,HIGH"
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy.txt ]]; then
            {
              echo "### Security Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```terraform'
              cat trivy.txt
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi
