# run all integration tests
test:
  go test -run 'TestIntegration' -v ./integration_test.go

alias tests := test

test-slinky:
    # NOTE: if you change the -t flag value, you MUST also change the name in slinky_test.go L29.
    cd .. && go mod tidy && docker build -f warden.Dockerfile -t warden/warden-protocol .
    cd slinky && go mod tidy && go test -v -race .

# list available integration tests
list:
  go test -v -list-only ./integration_test.go

# run a specific test case
focus name:
  go test -run 'TestIntegration/{{name}}' -v ./integration_test.go

[confirm("Are you sure you want to delete the folder?")]
_rm_rf dir:
  rm -rf {{dir}}

# regenerate all snapshots
snapshot: snapshot-base snapshot-keychain snapshot-many-users

# Define the new precompiles addresses
warden-precompiles := '["0x0000000000000000000000000000000000000900", "0x0000000000000000000000000000000000000901", "0x0000000000000000000000000000000000000902", "0x0000000000000000000000000000000000000903"]'

# regenerate ./testdata/snapshot-base
snapshot-base:
  #!/usr/bin/env bash
  function replace() {
    if [[ "$(uname)" == "Darwin" ]]; then
      /usr/bin/sed -i '' "$1" "$2"
    else
      sed -i "$1" "$2"
    fi
  }

  set -euxo pipefail

  export WARDEND_HOME=$PWD/testdata/snapshot-base

  just _rm_rf $WARDEND_HOME

  # prepare state
  wardend init testing --chain-id warden_1337-1 --default-denom award --home $WARDEND_HOME > /dev/null
  wardend config set client chain-id warden_1337-1 --home $WARDEND_HOME
  wardend config set client keyring-backend test --home $WARDEND_HOME

  wardend keys add alice --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend genesis add-genesis-account alice 10000000000000000000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  replace 's/aevmos/award/' $WARDEND_HOME/config/genesis.json
  replace 's/aevmos/award/' $WARDEND_HOME/config/app.toml
  jq '.app_state.evm.params.active_static_precompiles += {{warden-precompiles}}' $WARDEND_HOME/config/genesis.json > $WARDEND_HOME/config/temp.json && mv  $WARDEND_HOME/config/temp.json $WARDEND_HOME/config/genesis.json
  wardend genesis gentx alice 1000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis collect-gentxs --home $WARDEND_HOME

  # basic snapshot configuration, really fast block time
  wardend config set app minimum-gas-prices 0award --home $WARDEND_HOME
  wardend config set config consensus.timeout_propose 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_propose_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_prevote 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_prevote_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_precommit 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_precommit_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_commit 10ms -s --home $WARDEND_HOME

  # templating for changing default ports
  replace 's/tcp\:\/\/localhost\:26657/tcp\:\/\/localhost:{{{{ .CometPortRPC }}/' $WARDEND_HOME/config/client.toml

  replace 's/tcp\:\/\/localhost\:1317/tcp\:\/\/localhost:{{{{ .APIPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/localhost\:9090/localhost:{{{{ .GRPCPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/127\.0\.0\.1\:8545/127.0.0.1:{{{{ .JSONRPCPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/127\.0\.0\.1\:8546/127.0.0.1:{{{{ .JSONRPCWSPort }}/' $WARDEND_HOME/config/app.toml

  replace 's/tcp\:\/\/0\.0\.0\.0\:26656/tcp\:\/\/127.0.0.1:{{{{ .CometP2PRPC }}/' $WARDEND_HOME/config/config.toml
  replace 's/tcp\:\/\/127\.0\.0\.1\:26657/tcp\:\/\/127.0.0.1:{{{{ .CometPortRPC }}/' $WARDEND_HOME/config/config.toml

  # rename *.toml in *.toml.tmpl
  mv $WARDEND_HOME/config/app.toml    $WARDEND_HOME/config/app.toml.tmpl
  mv $WARDEND_HOME/config/client.toml $WARDEND_HOME/config/client.toml.tmpl
  mv $WARDEND_HOME/config/config.toml $WARDEND_HOME/config/config.toml.tmpl

# regenerate ./testdata/snapshot-keychain
snapshot-keychain:
  #!/usr/bin/env bash
  function replace() {
    if [[ "$(uname)" == "Darwin" ]]; then
      /usr/bin/sed -i '' "$1" "$2"
    else
      sed -i "$1" "$2"
    fi
  }

  set -euxo pipefail

  export WARDEND_HOME=$PWD/testdata/snapshot-keychain

  just _rm_rf $WARDEND_HOME

  # prepare state
  wardend init testing --chain-id warden_1337-1 --default-denom award --home $WARDEND_HOME > /dev/null
  wardend config set client chain-id warden_1337-1 --home $WARDEND_HOME
  wardend config set client keyring-backend test --home $WARDEND_HOME

  wardend keys add val --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend keys add writer --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend keys add bob --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend genesis add-genesis-account val 10000000000000000000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis add-genesis-account writer 10000000000000000000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis add-genesis-account bob 10000000000000000000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis add-genesis-space $(wardend keys show -a bob --keyring-backend test --home $WARDEND_HOME) --home $WARDEND_HOME
  wardend genesis add-genesis-keychain $(wardend keys show -a writer --keyring-backend test --home $WARDEND_HOME) "Test Keychain" "{\"key_req\":[{\"denom\":\"award\",\"amount\":\"2\"}],\"sig_req\":[{\"denom\":\"award\",\"amount\": \"2\"}]}" --home $WARDEND_HOME
  replace 's/aevmos/award/' $WARDEND_HOME/config/genesis.json
  replace 's/aevmos/award/' $WARDEND_HOME/config/app.toml
  jq '.app_state.evm.params.active_static_precompiles += {{warden-precompiles}}' $WARDEND_HOME/config/genesis.json > $WARDEND_HOME/config/temp.json && mv  $WARDEND_HOME/config/temp.json $WARDEND_HOME/config/genesis.json
  wardend genesis gentx val 1000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis collect-gentxs --home $WARDEND_HOME

  # basic snapshot configuration, really fast block time
  wardend config set app minimum-gas-prices 0award --home $WARDEND_HOME
  wardend config set config consensus.timeout_propose 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_propose_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_prevote 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_prevote_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_precommit 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_precommit_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_commit 10ms -s --home $WARDEND_HOME

  # templating for changing default ports
  replace 's/tcp\:\/\/localhost\:26657/tcp\:\/\/localhost:{{{{ .CometPortRPC }}/' $WARDEND_HOME/config/client.toml

  replace 's/tcp\:\/\/localhost\:1317/tcp\:\/\/localhost:{{{{ .APIPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/localhost\:9090/localhost:{{{{ .GRPCPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/127\.0\.0\.1\:8545/127.0.0.1:{{{{ .JSONRPCPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/127\.0\.0\.1\:8546/127.0.0.1:{{{{ .JSONRPCWSPort }}/' $WARDEND_HOME/config/app.toml

  replace 's/tcp\:\/\/0\.0\.0\.0\:26656/tcp\:\/\/127.0.0.1:{{{{ .CometP2PRPC }}/' $WARDEND_HOME/config/config.toml
  replace 's/tcp\:\/\/127\.0\.0\.1\:26657/tcp\:\/\/127.0.0.1:{{{{ .CometPortRPC }}/' $WARDEND_HOME/config/config.toml

  # rename *.toml in *.toml.tmpl
  mv $WARDEND_HOME/config/app.toml    $WARDEND_HOME/config/app.toml.tmpl
  mv $WARDEND_HOME/config/client.toml $WARDEND_HOME/config/client.toml.tmpl
  mv $WARDEND_HOME/config/config.toml $WARDEND_HOME/config/config.toml.tmpl

# regenerate ./testdata/snapshot-many-users
snapshot-many-users:
  #!/usr/bin/env bash
  function replace() {
    if [[ "$(uname)" == "Darwin" ]]; then
      /usr/bin/sed -i '' "$1" "$2"
    else
      sed -i "$1" "$2"
    fi
  }

  set -euxo pipefail

  export WARDEND_HOME=$PWD/testdata/snapshot-many-users

  just _rm_rf $WARDEND_HOME

  # prepare state
  wardend init testing --chain-id warden_1337-1 --default-denom award --home $WARDEND_HOME > /dev/null
  wardend config set client chain-id warden_1337-1 --home $WARDEND_HOME
  wardend config set client keyring-backend test --home $WARDEND_HOME

  wardend keys add alice --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend keys add bob --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend keys add charlie --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend keys add dave --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend keys add erin --keyring-backend test --home $WARDEND_HOME > /dev/null
  wardend keys add frank --keyring-backend test --home $WARDEND_HOME > /dev/null

  wardend genesis add-genesis-account alice 10000000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis add-genesis-account bob 10000000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis add-genesis-account charlie 10000000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis add-genesis-space $(wardend keys show -a alice --keyring-backend test --home $WARDEND_HOME) --home $WARDEND_HOME
  replace 's/aevmos/award/' $WARDEND_HOME/config/genesis.json
  replace 's/aevmos/award/' $WARDEND_HOME/config/app.toml
  jq '.app_state.evm.params.active_static_precompiles += {{warden-precompiles}}' $WARDEND_HOME/config/genesis.json > $WARDEND_HOME/config/temp.json && mv  $WARDEND_HOME/config/temp.json $WARDEND_HOME/config/genesis.json
  wardend genesis gentx alice 1000000000000000000000award --keyring-backend test --home $WARDEND_HOME
  wardend genesis collect-gentxs --home $WARDEND_HOME

  # basic snapshot configuration, really fast block time
  wardend config set app minimum-gas-prices 0award --home $WARDEND_HOME
  wardend config set config consensus.timeout_propose 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_propose_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_prevote 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_prevote_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_precommit 10ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_precommit_delta 5ms -s --home $WARDEND_HOME
  wardend config set config consensus.timeout_commit 10ms -s --home $WARDEND_HOME

  # templating for changing default ports
  replace 's/tcp\:\/\/localhost\:26657/tcp\:\/\/localhost:{{{{ .CometPortRPC }}/' $WARDEND_HOME/config/client.toml

  replace 's/tcp\:\/\/localhost\:1317/tcp\:\/\/localhost:{{{{ .APIPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/localhost\:9090/localhost:{{{{ .GRPCPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/127\.0\.0\.1\:8545/127.0.0.1:{{{{ .JSONRPCPort }}/' $WARDEND_HOME/config/app.toml
  replace 's/127\.0\.0\.1\:8546/127.0.0.1:{{{{ .JSONRPCWSPort }}/' $WARDEND_HOME/config/app.toml

  replace 's/tcp\:\/\/0\.0\.0\.0\:26656/tcp\:\/\/127.0.0.1:{{{{ .CometP2PRPC }}/' $WARDEND_HOME/config/config.toml
  replace 's/tcp\:\/\/127\.0\.0\.1\:26657/tcp\:\/\/127.0.0.1:{{{{ .CometPortRPC }}/' $WARDEND_HOME/config/config.toml

  # rename *.toml in *.toml.tmpl
  mv $WARDEND_HOME/config/app.toml    $WARDEND_HOME/config/app.toml.tmpl
  mv $WARDEND_HOME/config/client.toml $WARDEND_HOME/config/client.toml.tmpl
  mv $WARDEND_HOME/config/config.toml $WARDEND_HOME/config/config.toml.tmpl

# regenerate caller contract
contract-caller:
  solc --evm-version paris --bin ./testdata/contracts/caller/Caller.sol -o ./testdata/contracts/caller --overwrite
  solc --evm-version paris --abi ./testdata/contracts/caller/Caller.sol -o ./testdata/contracts/caller --overwrite
  abigen --bin=./testdata/contracts/caller/Caller.bin --abi=./testdata/contracts/caller/Caller.abi --pkg=caller --out=./testdata/contracts/caller/Caller.go