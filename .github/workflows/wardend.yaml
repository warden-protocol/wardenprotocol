---
name: Release Wardend development image

on:
  push:
    branches: [main]
    paths:
      - "cmd/wardend/**"
      - "warden/**"
      - "precompiles/**"
      - "prophet/**"
    tags:
      - "wardend/v*"
  pull_request:
    paths:
      - "cmd/wardend/**"
      - "warden/**"
      - "precompiles/**"
      - "prophet/**"

env:
  modules: "./warden/... ./cmd/wardend/... ./cmd/faucet/... ./prophet/... ./precompiles/..."

jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --timeout=10m ${{ env.modules }}

  unit-test:
    runs-on: ubuntu-latest
    name: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Build
        run: go build -v ${{ env.modules }}
      - name: Test (-race)
        run: go test -race -v ${{ env.modules }}

  release-dev:
    name: ${{ matrix.release }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: ["release"]

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup just
        uses: extractions/setup-just@v2
        with:
          just-version: 1.39.0

      - name: ${{ matrix.release }}
        run: just wardend ${{ matrix.release }}
        env:
          SKIP: "--skip=validate"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
