syntax = "proto3";

package warden.async.v1beta1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/warden-protocol/wardenprotocol/warden/x/async/types/v1beta1";

// Plugin represents an extension for adding new capabilities to the
// blockchain. As part of the x/async module, a plugin executes Tasks offchain,
// asynchronously.
//
// Validators register zero, one, or more, Plugins they're willing to execute.
//
// Plugins are divided in two categories: 1st party plugins that are shipped
// together with the Warden Protocol node binary, and 3rd party plugins
// developed by others.
message Plugin {
  // Unique ID of the Plugin.
  //
  // For 1st party plugins, it will just be its name, e.g.:
  // - foo
  // - bar
  // - http
  //
  // For 3rd party plugins, it will be a combination of the address of the creator and its name, e.g.:
  // - 0x4838B108FCe9647Bdf1A7877BF73cE8B0BAD5f97:foo
  // - 0x73f7b9124B2cD361cC0f7654998953E2a251dd58:foo
  // - 0x4838B108FCe9647Bdf1A7877BF73cE8B0BAD5f97:bar
  // - 0x73f7b9124B2cD361cC0f7654998953E2a251dd58:http
  string id = 1;
  // Creator of the plugin. In case of 1st party plugins, this will be empty.
  string creator = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // Human-readable description of what this plugin can do.
  string description = 3;
  // Fees for creating and executing tasks.
  PluginFee fee = 4 [(gogoproto.nullable) = false];
  // Timeout for adding a result to tasks of this plugin.
  // After this timeout elapses, an automated error result will be added on
  // behalf of the solver.
  //
  // The maximum value for this timeout is defined as an x/async module
  // parameter.
  google.protobuf.Duration timeout = 5 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdduration) = true
  ];
}

// Fees for creating and executing concrete task.
message PluginFee {
  // The percentage of the fee that goes to the creator of the plugin. The rest goes to the executor of the task.
  // Expressed as a number in the range [0, 1].
  string plugin_creator_reward_in_percent = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  // Fee for creating and executing new Task.
  repeated cosmos.base.v1beta1.Coin fee = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins"
  ];
}
