syntax = "proto3";
package warden.act.v1beta1;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "warden/act/v1beta1/action.proto";
import "warden/act/v1beta1/params.proto";
import "warden/act/v1beta1/template.proto";

option go_package = "github.com/warden-protocol/wardenprotocol/warden/x/act/types/v1beta1";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/wardenprotocol/warden/act/params";
  }

  // Queries a list of Actions items.
  rpc Actions(QueryActionsRequest) returns (QueryActionsResponse) {
    option (google.api.http).get = "/wardenprotocol/warden/act/actions";
  }

  // Queries a list of Templates items.
  rpc Templates(QueryTemplatesRequest) returns (QueryTemplatesResponse) {
    option (google.api.http).get = "/wardenprotocol/warden/act/templates";
  }

  // Queries to simulate a Template
  rpc SimulateTemplate(QuerySimulateTemplateRequest) returns (QuerySimulateTemplateResponse) {
    option (google.api.http).get = "/wardenprotocol/warden/act/simulate";
  }

  // Queries a list of TemplateById items.
  rpc TemplateById(QueryTemplateByIdRequest) returns (QueryTemplateByIdResponse) {
    option (google.api.http).get = "/wardenprotocol/warden/act/template_by_id";
  }

  // Queries a list of Actions items by one participant address.
  rpc ActionsByAddress(QueryActionsByAddressRequest) returns (QueryActionsByAddressResponse) {
    option (google.api.http).get = "/wardenprotocol/warden/act/actions_by_address";
  }

  rpc ActionById(QueryActionByIdRequest) returns (QueryActionByIdResponse) {
    option (google.api.http).get = "/wardenprotocol/warden/act/action_by_id";
  }

  // this line is used by starport scaffolding # 1
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryActionsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryActionsResponse {
  cosmos.base.query.v1beta1.PageResponse pagination = 1;
  repeated Action actions = 2 [(gogoproto.nullable) = false];
}

message QueryTemplatesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string creator = 2 [(gogoproto.nullable) = true];
}

message QueryTemplatesResponse {
  cosmos.base.query.v1beta1.PageResponse pagination = 1;
  repeated Template templates = 2 [(gogoproto.nullable) = false];
}

message QuerySimulateTemplateRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string definition = 2;
}

message QuerySimulateTemplateResponse {
  string evaluation = 1;
}

message QueryTemplateByIdRequest {
  uint64 id = 1;
}

message QueryTemplateByIdResponse {
  Template template = 1;
}

message QueryActionsByAddressRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  string address = 2;
  ActionStatus status = 3 [(gogoproto.nullable) = true];
}

message QueryActionsByAddressResponse {
  cosmos.base.query.v1beta1.PageResponse pagination = 1;
  repeated Action actions = 2 [(gogoproto.nullable) = false];
}

message QueryActionByIdRequest {
  uint64 id = 1;
}

message QueryActionByIdResponse {
  Action action = 1;
}
